//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2500
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace is2AdminClient {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class 出荷実績データ : DataSet {
        
        private table出荷実績DataTable tabletable出荷実績;
        
        public 出荷実績データ() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected 出荷実績データ(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["table出荷実績"] != null)) {
                    this.Tables.Add(new table出荷実績DataTable(ds.Tables["table出荷実績"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public table出荷実績DataTable table出荷実績 {
            get {
                return this.tabletable出荷実績;
            }
        }
        
        public override DataSet Clone() {
            出荷実績データ cln = ((出荷実績データ)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["table出荷実績"] != null)) {
                this.Tables.Add(new table出荷実績DataTable(ds.Tables["table出荷実績"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletable出荷実績 = ((table出荷実績DataTable)(this.Tables["table出荷実績"]));
            if ((this.tabletable出荷実績 != null)) {
                this.tabletable出荷実績.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "出荷実績データ";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/出荷実績データ.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletable出荷実績 = new table出荷実績DataTable();
            this.Tables.Add(this.tabletable出荷実績);
        }
        
        private bool ShouldSerializetable出荷実績() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void table出荷実績RowChangeEventHandler(object sender, table出荷実績RowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table出荷実績DataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column番号;
            
            private DataColumn column小計フラグ;
            
            private DataColumn column日付タイトル;
            
            private DataColumn column登録日;
            
            private DataColumn column荷受人コード;
            
            private DataColumn column荷受人郵便番号;
            
            private DataColumn column荷受人電話番号;
            
            private DataColumn column荷受人住所１;
            
            private DataColumn column荷受人住所２;
            
            private DataColumn column荷受人住所３;
            
            private DataColumn column荷受人名前１;
            
            private DataColumn column荷受人名前２;
            
            private DataColumn column着店コード;
            
            private DataColumn column着店名;
            
            private DataColumn column荷送人コード;
            
            private DataColumn column荷送人郵便番号;
            
            private DataColumn column荷送人電話番号;
            
            private DataColumn column荷送人住所１;
            
            private DataColumn column荷送人住所２;
            
            private DataColumn column荷送人名前１;
            
            private DataColumn column荷送人名前２;
            
            private DataColumn column担当;
            
            private DataColumn column個数;
            
            private DataColumn column重量;
            
            private DataColumn column指定日;
            
            private DataColumn column輸送指示１;
            
            private DataColumn column輸送指示２;
            
            private DataColumn column品名記事１;
            
            private DataColumn column品名記事２;
            
            private DataColumn column品名記事３;
            
            private DataColumn column品名記事４;
            
            private DataColumn column品名記事５;
            
            private DataColumn column品名記事６;
            
            private DataColumn column元着区分;
            
            private DataColumn column保険金額;
            
            private DataColumn columnお客様番号;
            
            private DataColumn column出荷日;
            
            private DataColumn column送り状番号;
            
            private DataColumn column件数小計;
            
            private DataColumn column個数小計;
            
            private DataColumn column重量小計;
            
            private DataColumn column保険小計;
            
            private DataColumn column運賃;
            
            private DataColumn column運賃小計;
            
            private DataColumn columnヘッダ１名称;
            
            private DataColumn column王子運送FLG;
            
            private DataColumn column配完日時あり;
            
            private DataColumn column配完日時;
            
            private DataColumn column会員コード;
            
            private DataColumn column会員名;
            
            internal table出荷実績DataTable() : 
                    base("table出荷実績") {
                this.InitClass();
            }
            
            internal table出荷実績DataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 番号Column {
                get {
                    return this.column番号;
                }
            }
            
            internal DataColumn 小計フラグColumn {
                get {
                    return this.column小計フラグ;
                }
            }
            
            internal DataColumn 日付タイトルColumn {
                get {
                    return this.column日付タイトル;
                }
            }
            
            internal DataColumn 登録日Column {
                get {
                    return this.column登録日;
                }
            }
            
            internal DataColumn 荷受人コードColumn {
                get {
                    return this.column荷受人コード;
                }
            }
            
            internal DataColumn 荷受人郵便番号Column {
                get {
                    return this.column荷受人郵便番号;
                }
            }
            
            internal DataColumn 荷受人電話番号Column {
                get {
                    return this.column荷受人電話番号;
                }
            }
            
            internal DataColumn 荷受人住所１Column {
                get {
                    return this.column荷受人住所１;
                }
            }
            
            internal DataColumn 荷受人住所２Column {
                get {
                    return this.column荷受人住所２;
                }
            }
            
            internal DataColumn 荷受人住所３Column {
                get {
                    return this.column荷受人住所３;
                }
            }
            
            internal DataColumn 荷受人名前１Column {
                get {
                    return this.column荷受人名前１;
                }
            }
            
            internal DataColumn 荷受人名前２Column {
                get {
                    return this.column荷受人名前２;
                }
            }
            
            internal DataColumn 着店コードColumn {
                get {
                    return this.column着店コード;
                }
            }
            
            internal DataColumn 着店名Column {
                get {
                    return this.column着店名;
                }
            }
            
            internal DataColumn 荷送人コードColumn {
                get {
                    return this.column荷送人コード;
                }
            }
            
            internal DataColumn 荷送人郵便番号Column {
                get {
                    return this.column荷送人郵便番号;
                }
            }
            
            internal DataColumn 荷送人電話番号Column {
                get {
                    return this.column荷送人電話番号;
                }
            }
            
            internal DataColumn 荷送人住所１Column {
                get {
                    return this.column荷送人住所１;
                }
            }
            
            internal DataColumn 荷送人住所２Column {
                get {
                    return this.column荷送人住所２;
                }
            }
            
            internal DataColumn 荷送人名前１Column {
                get {
                    return this.column荷送人名前１;
                }
            }
            
            internal DataColumn 荷送人名前２Column {
                get {
                    return this.column荷送人名前２;
                }
            }
            
            internal DataColumn 担当Column {
                get {
                    return this.column担当;
                }
            }
            
            internal DataColumn 個数Column {
                get {
                    return this.column個数;
                }
            }
            
            internal DataColumn 重量Column {
                get {
                    return this.column重量;
                }
            }
            
            internal DataColumn 指定日Column {
                get {
                    return this.column指定日;
                }
            }
            
            internal DataColumn 輸送指示１Column {
                get {
                    return this.column輸送指示１;
                }
            }
            
            internal DataColumn 輸送指示２Column {
                get {
                    return this.column輸送指示２;
                }
            }
            
            internal DataColumn 品名記事１Column {
                get {
                    return this.column品名記事１;
                }
            }
            
            internal DataColumn 品名記事２Column {
                get {
                    return this.column品名記事２;
                }
            }
            
            internal DataColumn 品名記事３Column {
                get {
                    return this.column品名記事３;
                }
            }
            
            internal DataColumn 品名記事４Column {
                get {
                    return this.column品名記事４;
                }
            }
            
            internal DataColumn 品名記事５Column {
                get {
                    return this.column品名記事５;
                }
            }
            
            internal DataColumn 品名記事６Column {
                get {
                    return this.column品名記事６;
                }
            }
            
            internal DataColumn 元着区分Column {
                get {
                    return this.column元着区分;
                }
            }
            
            internal DataColumn 保険金額Column {
                get {
                    return this.column保険金額;
                }
            }
            
            internal DataColumn お客様番号Column {
                get {
                    return this.columnお客様番号;
                }
            }
            
            internal DataColumn 出荷日Column {
                get {
                    return this.column出荷日;
                }
            }
            
            internal DataColumn 送り状番号Column {
                get {
                    return this.column送り状番号;
                }
            }
            
            internal DataColumn 件数小計Column {
                get {
                    return this.column件数小計;
                }
            }
            
            internal DataColumn 個数小計Column {
                get {
                    return this.column個数小計;
                }
            }
            
            internal DataColumn 重量小計Column {
                get {
                    return this.column重量小計;
                }
            }
            
            internal DataColumn 保険小計Column {
                get {
                    return this.column保険小計;
                }
            }
            
            internal DataColumn 運賃Column {
                get {
                    return this.column運賃;
                }
            }
            
            internal DataColumn 運賃小計Column {
                get {
                    return this.column運賃小計;
                }
            }
            
            internal DataColumn ヘッダ１名称Column {
                get {
                    return this.columnヘッダ１名称;
                }
            }
            
            internal DataColumn 王子運送FLGColumn {
                get {
                    return this.column王子運送FLG;
                }
            }
            
            internal DataColumn 配完日時ありColumn {
                get {
                    return this.column配完日時あり;
                }
            }
            
            internal DataColumn 配完日時Column {
                get {
                    return this.column配完日時;
                }
            }
            
            internal DataColumn 会員コードColumn {
                get {
                    return this.column会員コード;
                }
            }
            
            internal DataColumn 会員名Column {
                get {
                    return this.column会員名;
                }
            }
            
            public table出荷実績Row this[int index] {
                get {
                    return ((table出荷実績Row)(this.Rows[index]));
                }
            }
            
            public event table出荷実績RowChangeEventHandler table出荷実績RowChanged;
            
            public event table出荷実績RowChangeEventHandler table出荷実績RowChanging;
            
            public event table出荷実績RowChangeEventHandler table出荷実績RowDeleted;
            
            public event table出荷実績RowChangeEventHandler table出荷実績RowDeleting;
            
            public void Addtable出荷実績Row(table出荷実績Row row) {
                this.Rows.Add(row);
            }
            
            public table出荷実績Row Addtable出荷実績Row(
                        int 番号, 
                        int 小計フラグ, 
                        string 日付タイトル, 
                        string 登録日, 
                        string 荷受人コード, 
                        string 荷受人郵便番号, 
                        string 荷受人電話番号, 
                        string 荷受人住所１, 
                        string 荷受人住所２, 
                        string 荷受人住所３, 
                        string 荷受人名前１, 
                        string 荷受人名前２, 
                        string 着店コード, 
                        string 着店名, 
                        string 荷送人コード, 
                        string 荷送人郵便番号, 
                        string 荷送人電話番号, 
                        string 荷送人住所１, 
                        string 荷送人住所２, 
                        string 荷送人名前１, 
                        string 荷送人名前２, 
                        string 担当, 
                        string 個数, 
                        string 重量, 
                        string 指定日, 
                        string 輸送指示１, 
                        string 輸送指示２, 
                        string 品名記事１, 
                        string 品名記事２, 
                        string 品名記事３, 
                        string 品名記事４, 
                        string 品名記事５, 
                        string 品名記事６, 
                        string 元着区分, 
                        string 保険金額, 
                        string お客様番号, 
                        string 出荷日, 
                        string 送り状番号, 
                        int 件数小計, 
                        int 個数小計, 
                        int 重量小計, 
                        int 保険小計, 
                        string 運賃, 
                        int 運賃小計, 
                        string ヘッダ１名称, 
                        string 王子運送FLG, 
                        string 配完日時あり, 
                        string 配完日時, 
                        string 会員コード, 
                        string 会員名) {
                table出荷実績Row rowtable出荷実績Row = ((table出荷実績Row)(this.NewRow()));
                rowtable出荷実績Row.ItemArray = new object[] {
                        番号,
                        小計フラグ,
                        日付タイトル,
                        登録日,
                        荷受人コード,
                        荷受人郵便番号,
                        荷受人電話番号,
                        荷受人住所１,
                        荷受人住所２,
                        荷受人住所３,
                        荷受人名前１,
                        荷受人名前２,
                        着店コード,
                        着店名,
                        荷送人コード,
                        荷送人郵便番号,
                        荷送人電話番号,
                        荷送人住所１,
                        荷送人住所２,
                        荷送人名前１,
                        荷送人名前２,
                        担当,
                        個数,
                        重量,
                        指定日,
                        輸送指示１,
                        輸送指示２,
                        品名記事１,
                        品名記事２,
                        品名記事３,
                        品名記事４,
                        品名記事５,
                        品名記事６,
                        元着区分,
                        保険金額,
                        お客様番号,
                        出荷日,
                        送り状番号,
                        件数小計,
                        個数小計,
                        重量小計,
                        保険小計,
                        運賃,
                        運賃小計,
                        ヘッダ１名称,
                        王子運送FLG,
                        配完日時あり,
                        配完日時,
                        会員コード,
                        会員名};
                this.Rows.Add(rowtable出荷実績Row);
                return rowtable出荷実績Row;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                table出荷実績DataTable cln = ((table出荷実績DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new table出荷実績DataTable();
            }
            
            internal void InitVars() {
                this.column番号 = this.Columns["番号"];
                this.column小計フラグ = this.Columns["小計フラグ"];
                this.column日付タイトル = this.Columns["日付タイトル"];
                this.column登録日 = this.Columns["登録日"];
                this.column荷受人コード = this.Columns["荷受人コード"];
                this.column荷受人郵便番号 = this.Columns["荷受人郵便番号"];
                this.column荷受人電話番号 = this.Columns["荷受人電話番号"];
                this.column荷受人住所１ = this.Columns["荷受人住所１"];
                this.column荷受人住所２ = this.Columns["荷受人住所２"];
                this.column荷受人住所３ = this.Columns["荷受人住所３"];
                this.column荷受人名前１ = this.Columns["荷受人名前１"];
                this.column荷受人名前２ = this.Columns["荷受人名前２"];
                this.column着店コード = this.Columns["着店コード"];
                this.column着店名 = this.Columns["着店名"];
                this.column荷送人コード = this.Columns["荷送人コード"];
                this.column荷送人郵便番号 = this.Columns["荷送人郵便番号"];
                this.column荷送人電話番号 = this.Columns["荷送人電話番号"];
                this.column荷送人住所１ = this.Columns["荷送人住所１"];
                this.column荷送人住所２ = this.Columns["荷送人住所２"];
                this.column荷送人名前１ = this.Columns["荷送人名前１"];
                this.column荷送人名前２ = this.Columns["荷送人名前２"];
                this.column担当 = this.Columns["担当"];
                this.column個数 = this.Columns["個数"];
                this.column重量 = this.Columns["重量"];
                this.column指定日 = this.Columns["指定日"];
                this.column輸送指示１ = this.Columns["輸送指示１"];
                this.column輸送指示２ = this.Columns["輸送指示２"];
                this.column品名記事１ = this.Columns["品名記事１"];
                this.column品名記事２ = this.Columns["品名記事２"];
                this.column品名記事３ = this.Columns["品名記事３"];
                this.column品名記事４ = this.Columns["品名記事４"];
                this.column品名記事５ = this.Columns["品名記事５"];
                this.column品名記事６ = this.Columns["品名記事６"];
                this.column元着区分 = this.Columns["元着区分"];
                this.column保険金額 = this.Columns["保険金額"];
                this.columnお客様番号 = this.Columns["お客様番号"];
                this.column出荷日 = this.Columns["出荷日"];
                this.column送り状番号 = this.Columns["送り状番号"];
                this.column件数小計 = this.Columns["件数小計"];
                this.column個数小計 = this.Columns["個数小計"];
                this.column重量小計 = this.Columns["重量小計"];
                this.column保険小計 = this.Columns["保険小計"];
                this.column運賃 = this.Columns["運賃"];
                this.column運賃小計 = this.Columns["運賃小計"];
                this.columnヘッダ１名称 = this.Columns["ヘッダ１名称"];
                this.column王子運送FLG = this.Columns["王子運送FLG"];
                this.column配完日時あり = this.Columns["配完日時あり"];
                this.column配完日時 = this.Columns["配完日時"];
                this.column会員コード = this.Columns["会員コード"];
                this.column会員名 = this.Columns["会員名"];
            }
            
            private void InitClass() {
                this.column番号 = new DataColumn("番号", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column番号);
                this.column小計フラグ = new DataColumn("小計フラグ", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column小計フラグ);
                this.column日付タイトル = new DataColumn("日付タイトル", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column日付タイトル);
                this.column登録日 = new DataColumn("登録日", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column登録日);
                this.column荷受人コード = new DataColumn("荷受人コード", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷受人コード);
                this.column荷受人郵便番号 = new DataColumn("荷受人郵便番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷受人郵便番号);
                this.column荷受人電話番号 = new DataColumn("荷受人電話番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷受人電話番号);
                this.column荷受人住所１ = new DataColumn("荷受人住所１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷受人住所１);
                this.column荷受人住所２ = new DataColumn("荷受人住所２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷受人住所２);
                this.column荷受人住所３ = new DataColumn("荷受人住所３", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷受人住所３);
                this.column荷受人名前１ = new DataColumn("荷受人名前１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷受人名前１);
                this.column荷受人名前２ = new DataColumn("荷受人名前２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷受人名前２);
                this.column着店コード = new DataColumn("着店コード", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column着店コード);
                this.column着店名 = new DataColumn("着店名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column着店名);
                this.column荷送人コード = new DataColumn("荷送人コード", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷送人コード);
                this.column荷送人郵便番号 = new DataColumn("荷送人郵便番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷送人郵便番号);
                this.column荷送人電話番号 = new DataColumn("荷送人電話番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷送人電話番号);
                this.column荷送人住所１ = new DataColumn("荷送人住所１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷送人住所１);
                this.column荷送人住所２ = new DataColumn("荷送人住所２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷送人住所２);
                this.column荷送人名前１ = new DataColumn("荷送人名前１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷送人名前１);
                this.column荷送人名前２ = new DataColumn("荷送人名前２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column荷送人名前２);
                this.column担当 = new DataColumn("担当", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column担当);
                this.column個数 = new DataColumn("個数", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column個数);
                this.column重量 = new DataColumn("重量", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column重量);
                this.column指定日 = new DataColumn("指定日", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column指定日);
                this.column輸送指示１ = new DataColumn("輸送指示１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column輸送指示１);
                this.column輸送指示２ = new DataColumn("輸送指示２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column輸送指示２);
                this.column品名記事１ = new DataColumn("品名記事１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column品名記事１);
                this.column品名記事２ = new DataColumn("品名記事２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column品名記事２);
                this.column品名記事３ = new DataColumn("品名記事３", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column品名記事３);
                this.column品名記事４ = new DataColumn("品名記事４", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column品名記事４);
                this.column品名記事５ = new DataColumn("品名記事５", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column品名記事５);
                this.column品名記事６ = new DataColumn("品名記事６", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column品名記事６);
                this.column元着区分 = new DataColumn("元着区分", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column元着区分);
                this.column保険金額 = new DataColumn("保険金額", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column保険金額);
                this.columnお客様番号 = new DataColumn("お客様番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnお客様番号);
                this.column出荷日 = new DataColumn("出荷日", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column出荷日);
                this.column送り状番号 = new DataColumn("送り状番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column送り状番号);
                this.column件数小計 = new DataColumn("件数小計", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column件数小計);
                this.column個数小計 = new DataColumn("個数小計", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column個数小計);
                this.column重量小計 = new DataColumn("重量小計", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column重量小計);
                this.column保険小計 = new DataColumn("保険小計", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column保険小計);
                this.column運賃 = new DataColumn("運賃", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column運賃);
                this.column運賃小計 = new DataColumn("運賃小計", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column運賃小計);
                this.columnヘッダ１名称 = new DataColumn("ヘッダ１名称", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnヘッダ１名称);
                this.column王子運送FLG = new DataColumn("王子運送FLG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column王子運送FLG);
                this.column配完日時あり = new DataColumn("配完日時あり", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column配完日時あり);
                this.column配完日時 = new DataColumn("配完日時", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column配完日時);
                this.column会員コード = new DataColumn("会員コード", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column会員コード);
                this.column会員名 = new DataColumn("会員名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column会員名);
            }
            
            public table出荷実績Row Newtable出荷実績Row() {
                return ((table出荷実績Row)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new table出荷実績Row(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(table出荷実績Row);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.table出荷実績RowChanged != null)) {
                    this.table出荷実績RowChanged(this, new table出荷実績RowChangeEvent(((table出荷実績Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.table出荷実績RowChanging != null)) {
                    this.table出荷実績RowChanging(this, new table出荷実績RowChangeEvent(((table出荷実績Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.table出荷実績RowDeleted != null)) {
                    this.table出荷実績RowDeleted(this, new table出荷実績RowChangeEvent(((table出荷実績Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.table出荷実績RowDeleting != null)) {
                    this.table出荷実績RowDeleting(this, new table出荷実績RowChangeEvent(((table出荷実績Row)(e.Row)), e.Action));
                }
            }
            
            public void Removetable出荷実績Row(table出荷実績Row row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table出荷実績Row : DataRow {
            
            private table出荷実績DataTable tabletable出荷実績;
            
            internal table出荷実績Row(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletable出荷実績 = ((table出荷実績DataTable)(this.Table));
            }
            
            public int 番号 {
                get {
                    try {
                        return ((int)(this[this.tabletable出荷実績.番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.番号Column] = value;
                }
            }
            
            public int 小計フラグ {
                get {
                    try {
                        return ((int)(this[this.tabletable出荷実績.小計フラグColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.小計フラグColumn] = value;
                }
            }
            
            public string 日付タイトル {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.日付タイトルColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.日付タイトルColumn] = value;
                }
            }
            
            public string 登録日 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.登録日Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.登録日Column] = value;
                }
            }
            
            public string 荷受人コード {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷受人コードColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷受人コードColumn] = value;
                }
            }
            
            public string 荷受人郵便番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷受人郵便番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷受人郵便番号Column] = value;
                }
            }
            
            public string 荷受人電話番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷受人電話番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷受人電話番号Column] = value;
                }
            }
            
            public string 荷受人住所１ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷受人住所１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷受人住所１Column] = value;
                }
            }
            
            public string 荷受人住所２ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷受人住所２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷受人住所２Column] = value;
                }
            }
            
            public string 荷受人住所３ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷受人住所３Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷受人住所３Column] = value;
                }
            }
            
            public string 荷受人名前１ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷受人名前１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷受人名前１Column] = value;
                }
            }
            
            public string 荷受人名前２ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷受人名前２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷受人名前２Column] = value;
                }
            }
            
            public string 着店コード {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.着店コードColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.着店コードColumn] = value;
                }
            }
            
            public string 着店名 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.着店名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.着店名Column] = value;
                }
            }
            
            public string 荷送人コード {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷送人コードColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷送人コードColumn] = value;
                }
            }
            
            public string 荷送人郵便番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷送人郵便番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷送人郵便番号Column] = value;
                }
            }
            
            public string 荷送人電話番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷送人電話番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷送人電話番号Column] = value;
                }
            }
            
            public string 荷送人住所１ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷送人住所１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷送人住所１Column] = value;
                }
            }
            
            public string 荷送人住所２ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷送人住所２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷送人住所２Column] = value;
                }
            }
            
            public string 荷送人名前１ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷送人名前１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷送人名前１Column] = value;
                }
            }
            
            public string 荷送人名前２ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.荷送人名前２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.荷送人名前２Column] = value;
                }
            }
            
            public string 担当 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.担当Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.担当Column] = value;
                }
            }
            
            public string 個数 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.個数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.個数Column] = value;
                }
            }
            
            public string 重量 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.重量Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.重量Column] = value;
                }
            }
            
            public string 指定日 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.指定日Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.指定日Column] = value;
                }
            }
            
            public string 輸送指示１ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.輸送指示１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.輸送指示１Column] = value;
                }
            }
            
            public string 輸送指示２ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.輸送指示２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.輸送指示２Column] = value;
                }
            }
            
            public string 品名記事１ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.品名記事１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.品名記事１Column] = value;
                }
            }
            
            public string 品名記事２ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.品名記事２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.品名記事２Column] = value;
                }
            }
            
            public string 品名記事３ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.品名記事３Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.品名記事３Column] = value;
                }
            }
            
            public string 品名記事４ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.品名記事４Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.品名記事４Column] = value;
                }
            }
            
            public string 品名記事５ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.品名記事５Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.品名記事５Column] = value;
                }
            }
            
            public string 品名記事６ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.品名記事６Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.品名記事６Column] = value;
                }
            }
            
            public string 元着区分 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.元着区分Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.元着区分Column] = value;
                }
            }
            
            public string 保険金額 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.保険金額Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.保険金額Column] = value;
                }
            }
            
            public string お客様番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.お客様番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.お客様番号Column] = value;
                }
            }
            
            public string 出荷日 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.出荷日Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.出荷日Column] = value;
                }
            }
            
            public string 送り状番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.送り状番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.送り状番号Column] = value;
                }
            }
            
            public int 件数小計 {
                get {
                    try {
                        return ((int)(this[this.tabletable出荷実績.件数小計Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.件数小計Column] = value;
                }
            }
            
            public int 個数小計 {
                get {
                    try {
                        return ((int)(this[this.tabletable出荷実績.個数小計Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.個数小計Column] = value;
                }
            }
            
            public int 重量小計 {
                get {
                    try {
                        return ((int)(this[this.tabletable出荷実績.重量小計Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.重量小計Column] = value;
                }
            }
            
            public int 保険小計 {
                get {
                    try {
                        return ((int)(this[this.tabletable出荷実績.保険小計Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.保険小計Column] = value;
                }
            }
            
            public string 運賃 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.運賃Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.運賃Column] = value;
                }
            }
            
            public int 運賃小計 {
                get {
                    try {
                        return ((int)(this[this.tabletable出荷実績.運賃小計Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.運賃小計Column] = value;
                }
            }
            
            public string ヘッダ１名称 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.ヘッダ１名称Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.ヘッダ１名称Column] = value;
                }
            }
            
            public string 王子運送FLG {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.王子運送FLGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.王子運送FLGColumn] = value;
                }
            }
            
            public string 配完日時あり {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.配完日時ありColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.配完日時ありColumn] = value;
                }
            }
            
            public string 配完日時 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.配完日時Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.配完日時Column] = value;
                }
            }
            
            public string 会員コード {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.会員コードColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.会員コードColumn] = value;
                }
            }
            
            public string 会員名 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷実績.会員名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷実績.会員名Column] = value;
                }
            }
            
            public bool Is番号Null() {
                return this.IsNull(this.tabletable出荷実績.番号Column);
            }
            
            public void Set番号Null() {
                this[this.tabletable出荷実績.番号Column] = System.Convert.DBNull;
            }
            
            public bool Is小計フラグNull() {
                return this.IsNull(this.tabletable出荷実績.小計フラグColumn);
            }
            
            public void Set小計フラグNull() {
                this[this.tabletable出荷実績.小計フラグColumn] = System.Convert.DBNull;
            }
            
            public bool Is日付タイトルNull() {
                return this.IsNull(this.tabletable出荷実績.日付タイトルColumn);
            }
            
            public void Set日付タイトルNull() {
                this[this.tabletable出荷実績.日付タイトルColumn] = System.Convert.DBNull;
            }
            
            public bool Is登録日Null() {
                return this.IsNull(this.tabletable出荷実績.登録日Column);
            }
            
            public void Set登録日Null() {
                this[this.tabletable出荷実績.登録日Column] = System.Convert.DBNull;
            }
            
            public bool Is荷受人コードNull() {
                return this.IsNull(this.tabletable出荷実績.荷受人コードColumn);
            }
            
            public void Set荷受人コードNull() {
                this[this.tabletable出荷実績.荷受人コードColumn] = System.Convert.DBNull;
            }
            
            public bool Is荷受人郵便番号Null() {
                return this.IsNull(this.tabletable出荷実績.荷受人郵便番号Column);
            }
            
            public void Set荷受人郵便番号Null() {
                this[this.tabletable出荷実績.荷受人郵便番号Column] = System.Convert.DBNull;
            }
            
            public bool Is荷受人電話番号Null() {
                return this.IsNull(this.tabletable出荷実績.荷受人電話番号Column);
            }
            
            public void Set荷受人電話番号Null() {
                this[this.tabletable出荷実績.荷受人電話番号Column] = System.Convert.DBNull;
            }
            
            public bool Is荷受人住所１Null() {
                return this.IsNull(this.tabletable出荷実績.荷受人住所１Column);
            }
            
            public void Set荷受人住所１Null() {
                this[this.tabletable出荷実績.荷受人住所１Column] = System.Convert.DBNull;
            }
            
            public bool Is荷受人住所２Null() {
                return this.IsNull(this.tabletable出荷実績.荷受人住所２Column);
            }
            
            public void Set荷受人住所２Null() {
                this[this.tabletable出荷実績.荷受人住所２Column] = System.Convert.DBNull;
            }
            
            public bool Is荷受人住所３Null() {
                return this.IsNull(this.tabletable出荷実績.荷受人住所３Column);
            }
            
            public void Set荷受人住所３Null() {
                this[this.tabletable出荷実績.荷受人住所３Column] = System.Convert.DBNull;
            }
            
            public bool Is荷受人名前１Null() {
                return this.IsNull(this.tabletable出荷実績.荷受人名前１Column);
            }
            
            public void Set荷受人名前１Null() {
                this[this.tabletable出荷実績.荷受人名前１Column] = System.Convert.DBNull;
            }
            
            public bool Is荷受人名前２Null() {
                return this.IsNull(this.tabletable出荷実績.荷受人名前２Column);
            }
            
            public void Set荷受人名前２Null() {
                this[this.tabletable出荷実績.荷受人名前２Column] = System.Convert.DBNull;
            }
            
            public bool Is着店コードNull() {
                return this.IsNull(this.tabletable出荷実績.着店コードColumn);
            }
            
            public void Set着店コードNull() {
                this[this.tabletable出荷実績.着店コードColumn] = System.Convert.DBNull;
            }
            
            public bool Is着店名Null() {
                return this.IsNull(this.tabletable出荷実績.着店名Column);
            }
            
            public void Set着店名Null() {
                this[this.tabletable出荷実績.着店名Column] = System.Convert.DBNull;
            }
            
            public bool Is荷送人コードNull() {
                return this.IsNull(this.tabletable出荷実績.荷送人コードColumn);
            }
            
            public void Set荷送人コードNull() {
                this[this.tabletable出荷実績.荷送人コードColumn] = System.Convert.DBNull;
            }
            
            public bool Is荷送人郵便番号Null() {
                return this.IsNull(this.tabletable出荷実績.荷送人郵便番号Column);
            }
            
            public void Set荷送人郵便番号Null() {
                this[this.tabletable出荷実績.荷送人郵便番号Column] = System.Convert.DBNull;
            }
            
            public bool Is荷送人電話番号Null() {
                return this.IsNull(this.tabletable出荷実績.荷送人電話番号Column);
            }
            
            public void Set荷送人電話番号Null() {
                this[this.tabletable出荷実績.荷送人電話番号Column] = System.Convert.DBNull;
            }
            
            public bool Is荷送人住所１Null() {
                return this.IsNull(this.tabletable出荷実績.荷送人住所１Column);
            }
            
            public void Set荷送人住所１Null() {
                this[this.tabletable出荷実績.荷送人住所１Column] = System.Convert.DBNull;
            }
            
            public bool Is荷送人住所２Null() {
                return this.IsNull(this.tabletable出荷実績.荷送人住所２Column);
            }
            
            public void Set荷送人住所２Null() {
                this[this.tabletable出荷実績.荷送人住所２Column] = System.Convert.DBNull;
            }
            
            public bool Is荷送人名前１Null() {
                return this.IsNull(this.tabletable出荷実績.荷送人名前１Column);
            }
            
            public void Set荷送人名前１Null() {
                this[this.tabletable出荷実績.荷送人名前１Column] = System.Convert.DBNull;
            }
            
            public bool Is荷送人名前２Null() {
                return this.IsNull(this.tabletable出荷実績.荷送人名前２Column);
            }
            
            public void Set荷送人名前２Null() {
                this[this.tabletable出荷実績.荷送人名前２Column] = System.Convert.DBNull;
            }
            
            public bool Is担当Null() {
                return this.IsNull(this.tabletable出荷実績.担当Column);
            }
            
            public void Set担当Null() {
                this[this.tabletable出荷実績.担当Column] = System.Convert.DBNull;
            }
            
            public bool Is個数Null() {
                return this.IsNull(this.tabletable出荷実績.個数Column);
            }
            
            public void Set個数Null() {
                this[this.tabletable出荷実績.個数Column] = System.Convert.DBNull;
            }
            
            public bool Is重量Null() {
                return this.IsNull(this.tabletable出荷実績.重量Column);
            }
            
            public void Set重量Null() {
                this[this.tabletable出荷実績.重量Column] = System.Convert.DBNull;
            }
            
            public bool Is指定日Null() {
                return this.IsNull(this.tabletable出荷実績.指定日Column);
            }
            
            public void Set指定日Null() {
                this[this.tabletable出荷実績.指定日Column] = System.Convert.DBNull;
            }
            
            public bool Is輸送指示１Null() {
                return this.IsNull(this.tabletable出荷実績.輸送指示１Column);
            }
            
            public void Set輸送指示１Null() {
                this[this.tabletable出荷実績.輸送指示１Column] = System.Convert.DBNull;
            }
            
            public bool Is輸送指示２Null() {
                return this.IsNull(this.tabletable出荷実績.輸送指示２Column);
            }
            
            public void Set輸送指示２Null() {
                this[this.tabletable出荷実績.輸送指示２Column] = System.Convert.DBNull;
            }
            
            public bool Is品名記事１Null() {
                return this.IsNull(this.tabletable出荷実績.品名記事１Column);
            }
            
            public void Set品名記事１Null() {
                this[this.tabletable出荷実績.品名記事１Column] = System.Convert.DBNull;
            }
            
            public bool Is品名記事２Null() {
                return this.IsNull(this.tabletable出荷実績.品名記事２Column);
            }
            
            public void Set品名記事２Null() {
                this[this.tabletable出荷実績.品名記事２Column] = System.Convert.DBNull;
            }
            
            public bool Is品名記事３Null() {
                return this.IsNull(this.tabletable出荷実績.品名記事３Column);
            }
            
            public void Set品名記事３Null() {
                this[this.tabletable出荷実績.品名記事３Column] = System.Convert.DBNull;
            }
            
            public bool Is品名記事４Null() {
                return this.IsNull(this.tabletable出荷実績.品名記事４Column);
            }
            
            public void Set品名記事４Null() {
                this[this.tabletable出荷実績.品名記事４Column] = System.Convert.DBNull;
            }
            
            public bool Is品名記事５Null() {
                return this.IsNull(this.tabletable出荷実績.品名記事５Column);
            }
            
            public void Set品名記事５Null() {
                this[this.tabletable出荷実績.品名記事５Column] = System.Convert.DBNull;
            }
            
            public bool Is品名記事６Null() {
                return this.IsNull(this.tabletable出荷実績.品名記事６Column);
            }
            
            public void Set品名記事６Null() {
                this[this.tabletable出荷実績.品名記事６Column] = System.Convert.DBNull;
            }
            
            public bool Is元着区分Null() {
                return this.IsNull(this.tabletable出荷実績.元着区分Column);
            }
            
            public void Set元着区分Null() {
                this[this.tabletable出荷実績.元着区分Column] = System.Convert.DBNull;
            }
            
            public bool Is保険金額Null() {
                return this.IsNull(this.tabletable出荷実績.保険金額Column);
            }
            
            public void Set保険金額Null() {
                this[this.tabletable出荷実績.保険金額Column] = System.Convert.DBNull;
            }
            
            public bool Isお客様番号Null() {
                return this.IsNull(this.tabletable出荷実績.お客様番号Column);
            }
            
            public void Setお客様番号Null() {
                this[this.tabletable出荷実績.お客様番号Column] = System.Convert.DBNull;
            }
            
            public bool Is出荷日Null() {
                return this.IsNull(this.tabletable出荷実績.出荷日Column);
            }
            
            public void Set出荷日Null() {
                this[this.tabletable出荷実績.出荷日Column] = System.Convert.DBNull;
            }
            
            public bool Is送り状番号Null() {
                return this.IsNull(this.tabletable出荷実績.送り状番号Column);
            }
            
            public void Set送り状番号Null() {
                this[this.tabletable出荷実績.送り状番号Column] = System.Convert.DBNull;
            }
            
            public bool Is件数小計Null() {
                return this.IsNull(this.tabletable出荷実績.件数小計Column);
            }
            
            public void Set件数小計Null() {
                this[this.tabletable出荷実績.件数小計Column] = System.Convert.DBNull;
            }
            
            public bool Is個数小計Null() {
                return this.IsNull(this.tabletable出荷実績.個数小計Column);
            }
            
            public void Set個数小計Null() {
                this[this.tabletable出荷実績.個数小計Column] = System.Convert.DBNull;
            }
            
            public bool Is重量小計Null() {
                return this.IsNull(this.tabletable出荷実績.重量小計Column);
            }
            
            public void Set重量小計Null() {
                this[this.tabletable出荷実績.重量小計Column] = System.Convert.DBNull;
            }
            
            public bool Is保険小計Null() {
                return this.IsNull(this.tabletable出荷実績.保険小計Column);
            }
            
            public void Set保険小計Null() {
                this[this.tabletable出荷実績.保険小計Column] = System.Convert.DBNull;
            }
            
            public bool Is運賃Null() {
                return this.IsNull(this.tabletable出荷実績.運賃Column);
            }
            
            public void Set運賃Null() {
                this[this.tabletable出荷実績.運賃Column] = System.Convert.DBNull;
            }
            
            public bool Is運賃小計Null() {
                return this.IsNull(this.tabletable出荷実績.運賃小計Column);
            }
            
            public void Set運賃小計Null() {
                this[this.tabletable出荷実績.運賃小計Column] = System.Convert.DBNull;
            }
            
            public bool Isヘッダ１名称Null() {
                return this.IsNull(this.tabletable出荷実績.ヘッダ１名称Column);
            }
            
            public void Setヘッダ１名称Null() {
                this[this.tabletable出荷実績.ヘッダ１名称Column] = System.Convert.DBNull;
            }
            
            public bool Is王子運送FLGNull() {
                return this.IsNull(this.tabletable出荷実績.王子運送FLGColumn);
            }
            
            public void Set王子運送FLGNull() {
                this[this.tabletable出荷実績.王子運送FLGColumn] = System.Convert.DBNull;
            }
            
            public bool Is配完日時ありNull() {
                return this.IsNull(this.tabletable出荷実績.配完日時ありColumn);
            }
            
            public void Set配完日時ありNull() {
                this[this.tabletable出荷実績.配完日時ありColumn] = System.Convert.DBNull;
            }
            
            public bool Is配完日時Null() {
                return this.IsNull(this.tabletable出荷実績.配完日時Column);
            }
            
            public void Set配完日時Null() {
                this[this.tabletable出荷実績.配完日時Column] = System.Convert.DBNull;
            }
            
            public bool Is会員コードNull() {
                return this.IsNull(this.tabletable出荷実績.会員コードColumn);
            }
            
            public void Set会員コードNull() {
                this[this.tabletable出荷実績.会員コードColumn] = System.Convert.DBNull;
            }
            
            public bool Is会員名Null() {
                return this.IsNull(this.tabletable出荷実績.会員名Column);
            }
            
            public void Set会員名Null() {
                this[this.tabletable出荷実績.会員名Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table出荷実績RowChangeEvent : EventArgs {
            
            private table出荷実績Row eventRow;
            
            private DataRowAction eventAction;
            
            public table出荷実績RowChangeEvent(table出荷実績Row row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public table出荷実績Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
