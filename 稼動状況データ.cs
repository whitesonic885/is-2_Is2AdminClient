//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace is2AdminClient {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class 稼動状況データ : DataSet {
        
        private table稼動状況DataTable tabletable稼動状況;
        
        public 稼動状況データ() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected 稼動状況データ(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["table稼動状況"] != null)) {
                    this.Tables.Add(new table稼動状況DataTable(ds.Tables["table稼動状況"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public table稼動状況DataTable table稼動状況 {
            get {
                return this.tabletable稼動状況;
            }
        }
        
        public override DataSet Clone() {
            稼動状況データ cln = ((稼動状況データ)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["table稼動状況"] != null)) {
                this.Tables.Add(new table稼動状況DataTable(ds.Tables["table稼動状況"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletable稼動状況 = ((table稼動状況DataTable)(this.Tables["table稼動状況"]));
            if ((this.tabletable稼動状況 != null)) {
                this.tabletable稼動状況.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "稼動状況データ";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/稼動状況データ.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletable稼動状況 = new table稼動状況DataTable();
            this.Tables.Add(this.tabletable稼動状況);
        }
        
        private bool ShouldSerializetable稼動状況() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void table稼動状況RowChangeEventHandler(object sender, table稼動状況RowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table稼動状況DataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column店所名;
            
            private DataColumn column導入台数;
            
            private DataColumn column稼動台数;
            
            private DataColumn column稼働率;
            
            private DataColumn column地区導入台数;
            
            private DataColumn column地区稼働台数;
            
            private DataColumn column地区稼働率;
            
            private DataColumn column小計導入台数;
            
            private DataColumn column小計稼働台数;
            
            private DataColumn column小計稼働率;
            
            private DataColumn column本体系導入台数;
            
            private DataColumn column本体系稼働台数;
            
            private DataColumn column本体系稼働率;
            
            private DataColumn column関連系導入台数;
            
            private DataColumn column関連系稼働台数;
            
            private DataColumn column関連系稼働率;
            
            private DataColumn column連結系導入台数;
            
            private DataColumn column連結系稼働台数;
            
            private DataColumn column連結系稼働率;
            
            private DataColumn column開始日付;
            
            private DataColumn column終了日付;
            
            private DataColumn column地区CD１;
            
            private DataColumn column地区CD２;
            
            private DataColumn column地区名;
            
            private DataColumn column小計地区名;
            
            private DataColumn column終了フラグ;
            
            internal table稼動状況DataTable() : 
                    base("table稼動状況") {
                this.InitClass();
            }
            
            internal table稼動状況DataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 店所名Column {
                get {
                    return this.column店所名;
                }
            }
            
            internal DataColumn 導入台数Column {
                get {
                    return this.column導入台数;
                }
            }
            
            internal DataColumn 稼動台数Column {
                get {
                    return this.column稼動台数;
                }
            }
            
            internal DataColumn 稼働率Column {
                get {
                    return this.column稼働率;
                }
            }
            
            internal DataColumn 地区導入台数Column {
                get {
                    return this.column地区導入台数;
                }
            }
            
            internal DataColumn 地区稼働台数Column {
                get {
                    return this.column地区稼働台数;
                }
            }
            
            internal DataColumn 地区稼働率Column {
                get {
                    return this.column地区稼働率;
                }
            }
            
            internal DataColumn 小計導入台数Column {
                get {
                    return this.column小計導入台数;
                }
            }
            
            internal DataColumn 小計稼働台数Column {
                get {
                    return this.column小計稼働台数;
                }
            }
            
            internal DataColumn 小計稼働率Column {
                get {
                    return this.column小計稼働率;
                }
            }
            
            internal DataColumn 本体系導入台数Column {
                get {
                    return this.column本体系導入台数;
                }
            }
            
            internal DataColumn 本体系稼働台数Column {
                get {
                    return this.column本体系稼働台数;
                }
            }
            
            internal DataColumn 本体系稼働率Column {
                get {
                    return this.column本体系稼働率;
                }
            }
            
            internal DataColumn 関連系導入台数Column {
                get {
                    return this.column関連系導入台数;
                }
            }
            
            internal DataColumn 関連系稼働台数Column {
                get {
                    return this.column関連系稼働台数;
                }
            }
            
            internal DataColumn 関連系稼働率Column {
                get {
                    return this.column関連系稼働率;
                }
            }
            
            internal DataColumn 連結系導入台数Column {
                get {
                    return this.column連結系導入台数;
                }
            }
            
            internal DataColumn 連結系稼働台数Column {
                get {
                    return this.column連結系稼働台数;
                }
            }
            
            internal DataColumn 連結系稼働率Column {
                get {
                    return this.column連結系稼働率;
                }
            }
            
            internal DataColumn 開始日付Column {
                get {
                    return this.column開始日付;
                }
            }
            
            internal DataColumn 終了日付Column {
                get {
                    return this.column終了日付;
                }
            }
            
            internal DataColumn 地区CD１Column {
                get {
                    return this.column地区CD１;
                }
            }
            
            internal DataColumn 地区CD２Column {
                get {
                    return this.column地区CD２;
                }
            }
            
            internal DataColumn 地区名Column {
                get {
                    return this.column地区名;
                }
            }
            
            internal DataColumn 小計地区名Column {
                get {
                    return this.column小計地区名;
                }
            }
            
            internal DataColumn 終了フラグColumn {
                get {
                    return this.column終了フラグ;
                }
            }
            
            public table稼動状況Row this[int index] {
                get {
                    return ((table稼動状況Row)(this.Rows[index]));
                }
            }
            
            public event table稼動状況RowChangeEventHandler table稼動状況RowChanged;
            
            public event table稼動状況RowChangeEventHandler table稼動状況RowChanging;
            
            public event table稼動状況RowChangeEventHandler table稼動状況RowDeleted;
            
            public event table稼動状況RowChangeEventHandler table稼動状況RowDeleting;
            
            public void Addtable稼動状況Row(table稼動状況Row row) {
                this.Rows.Add(row);
            }
            
            public table稼動状況Row Addtable稼動状況Row(
                        string 店所名, 
                        string 導入台数, 
                        string 稼動台数, 
                        string 稼働率, 
                        int 地区導入台数, 
                        int 地区稼働台数, 
                        System.Double 地区稼働率, 
                        int 小計導入台数, 
                        int 小計稼働台数, 
                        System.Double 小計稼働率, 
                        int 本体系導入台数, 
                        int 本体系稼働台数, 
                        System.Double 本体系稼働率, 
                        int 関連系導入台数, 
                        int 関連系稼働台数, 
                        System.Double 関連系稼働率, 
                        int 連結系導入台数, 
                        int 連結系稼働台数, 
                        System.Double 連結系稼働率, 
                        string 開始日付, 
                        string 終了日付, 
                        string 地区CD１, 
                        string 地区CD２, 
                        string 地区名, 
                        string 小計地区名, 
                        bool 終了フラグ) {
                table稼動状況Row rowtable稼動状況Row = ((table稼動状況Row)(this.NewRow()));
                rowtable稼動状況Row.ItemArray = new object[] {
                        店所名,
                        導入台数,
                        稼動台数,
                        稼働率,
                        地区導入台数,
                        地区稼働台数,
                        地区稼働率,
                        小計導入台数,
                        小計稼働台数,
                        小計稼働率,
                        本体系導入台数,
                        本体系稼働台数,
                        本体系稼働率,
                        関連系導入台数,
                        関連系稼働台数,
                        関連系稼働率,
                        連結系導入台数,
                        連結系稼働台数,
                        連結系稼働率,
                        開始日付,
                        終了日付,
                        地区CD１,
                        地区CD２,
                        地区名,
                        小計地区名,
                        終了フラグ};
                this.Rows.Add(rowtable稼動状況Row);
                return rowtable稼動状況Row;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                table稼動状況DataTable cln = ((table稼動状況DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new table稼動状況DataTable();
            }
            
            internal void InitVars() {
                this.column店所名 = this.Columns["店所名"];
                this.column導入台数 = this.Columns["導入台数"];
                this.column稼動台数 = this.Columns["稼動台数"];
                this.column稼働率 = this.Columns["稼働率"];
                this.column地区導入台数 = this.Columns["地区導入台数"];
                this.column地区稼働台数 = this.Columns["地区稼働台数"];
                this.column地区稼働率 = this.Columns["地区稼働率"];
                this.column小計導入台数 = this.Columns["小計導入台数"];
                this.column小計稼働台数 = this.Columns["小計稼働台数"];
                this.column小計稼働率 = this.Columns["小計稼働率"];
                this.column本体系導入台数 = this.Columns["本体系導入台数"];
                this.column本体系稼働台数 = this.Columns["本体系稼働台数"];
                this.column本体系稼働率 = this.Columns["本体系稼働率"];
                this.column関連系導入台数 = this.Columns["関連系導入台数"];
                this.column関連系稼働台数 = this.Columns["関連系稼働台数"];
                this.column関連系稼働率 = this.Columns["関連系稼働率"];
                this.column連結系導入台数 = this.Columns["連結系導入台数"];
                this.column連結系稼働台数 = this.Columns["連結系稼働台数"];
                this.column連結系稼働率 = this.Columns["連結系稼働率"];
                this.column開始日付 = this.Columns["開始日付"];
                this.column終了日付 = this.Columns["終了日付"];
                this.column地区CD１ = this.Columns["地区CD１"];
                this.column地区CD２ = this.Columns["地区CD２"];
                this.column地区名 = this.Columns["地区名"];
                this.column小計地区名 = this.Columns["小計地区名"];
                this.column終了フラグ = this.Columns["終了フラグ"];
            }
            
            private void InitClass() {
                this.column店所名 = new DataColumn("店所名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column店所名);
                this.column導入台数 = new DataColumn("導入台数", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column導入台数);
                this.column稼動台数 = new DataColumn("稼動台数", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column稼動台数);
                this.column稼働率 = new DataColumn("稼働率", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column稼働率);
                this.column地区導入台数 = new DataColumn("地区導入台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column地区導入台数);
                this.column地区稼働台数 = new DataColumn("地区稼働台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column地区稼働台数);
                this.column地区稼働率 = new DataColumn("地区稼働率", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column地区稼働率);
                this.column小計導入台数 = new DataColumn("小計導入台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column小計導入台数);
                this.column小計稼働台数 = new DataColumn("小計稼働台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column小計稼働台数);
                this.column小計稼働率 = new DataColumn("小計稼働率", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column小計稼働率);
                this.column本体系導入台数 = new DataColumn("本体系導入台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column本体系導入台数);
                this.column本体系稼働台数 = new DataColumn("本体系稼働台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column本体系稼働台数);
                this.column本体系稼働率 = new DataColumn("本体系稼働率", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column本体系稼働率);
                this.column関連系導入台数 = new DataColumn("関連系導入台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column関連系導入台数);
                this.column関連系稼働台数 = new DataColumn("関連系稼働台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column関連系稼働台数);
                this.column関連系稼働率 = new DataColumn("関連系稼働率", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column関連系稼働率);
                this.column連結系導入台数 = new DataColumn("連結系導入台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column連結系導入台数);
                this.column連結系稼働台数 = new DataColumn("連結系稼働台数", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column連結系稼働台数);
                this.column連結系稼働率 = new DataColumn("連結系稼働率", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column連結系稼働率);
                this.column開始日付 = new DataColumn("開始日付", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column開始日付);
                this.column終了日付 = new DataColumn("終了日付", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column終了日付);
                this.column地区CD１ = new DataColumn("地区CD１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column地区CD１);
                this.column地区CD２ = new DataColumn("地区CD２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column地区CD２);
                this.column地区名 = new DataColumn("地区名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column地区名);
                this.column小計地区名 = new DataColumn("小計地区名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column小計地区名);
                this.column終了フラグ = new DataColumn("終了フラグ", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column終了フラグ);
            }
            
            public table稼動状況Row Newtable稼動状況Row() {
                return ((table稼動状況Row)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new table稼動状況Row(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(table稼動状況Row);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.table稼動状況RowChanged != null)) {
                    this.table稼動状況RowChanged(this, new table稼動状況RowChangeEvent(((table稼動状況Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.table稼動状況RowChanging != null)) {
                    this.table稼動状況RowChanging(this, new table稼動状況RowChangeEvent(((table稼動状況Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.table稼動状況RowDeleted != null)) {
                    this.table稼動状況RowDeleted(this, new table稼動状況RowChangeEvent(((table稼動状況Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.table稼動状況RowDeleting != null)) {
                    this.table稼動状況RowDeleting(this, new table稼動状況RowChangeEvent(((table稼動状況Row)(e.Row)), e.Action));
                }
            }
            
            public void Removetable稼動状況Row(table稼動状況Row row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table稼動状況Row : DataRow {
            
            private table稼動状況DataTable tabletable稼動状況;
            
            internal table稼動状況Row(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletable稼動状況 = ((table稼動状況DataTable)(this.Table));
            }
            
            public string 店所名 {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.店所名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.店所名Column] = value;
                }
            }
            
            public string 導入台数 {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.導入台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.導入台数Column] = value;
                }
            }
            
            public string 稼動台数 {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.稼動台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.稼動台数Column] = value;
                }
            }
            
            public string 稼働率 {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.稼働率Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.稼働率Column] = value;
                }
            }
            
            public int 地区導入台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.地区導入台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.地区導入台数Column] = value;
                }
            }
            
            public int 地区稼働台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.地区稼働台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.地区稼働台数Column] = value;
                }
            }
            
            public System.Double 地区稼働率 {
                get {
                    try {
                        return ((System.Double)(this[this.tabletable稼動状況.地区稼働率Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.地区稼働率Column] = value;
                }
            }
            
            public int 小計導入台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.小計導入台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.小計導入台数Column] = value;
                }
            }
            
            public int 小計稼働台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.小計稼働台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.小計稼働台数Column] = value;
                }
            }
            
            public System.Double 小計稼働率 {
                get {
                    try {
                        return ((System.Double)(this[this.tabletable稼動状況.小計稼働率Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.小計稼働率Column] = value;
                }
            }
            
            public int 本体系導入台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.本体系導入台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.本体系導入台数Column] = value;
                }
            }
            
            public int 本体系稼働台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.本体系稼働台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.本体系稼働台数Column] = value;
                }
            }
            
            public System.Double 本体系稼働率 {
                get {
                    try {
                        return ((System.Double)(this[this.tabletable稼動状況.本体系稼働率Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.本体系稼働率Column] = value;
                }
            }
            
            public int 関連系導入台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.関連系導入台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.関連系導入台数Column] = value;
                }
            }
            
            public int 関連系稼働台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.関連系稼働台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.関連系稼働台数Column] = value;
                }
            }
            
            public System.Double 関連系稼働率 {
                get {
                    try {
                        return ((System.Double)(this[this.tabletable稼動状況.関連系稼働率Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.関連系稼働率Column] = value;
                }
            }
            
            public int 連結系導入台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.連結系導入台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.連結系導入台数Column] = value;
                }
            }
            
            public int 連結系稼働台数 {
                get {
                    try {
                        return ((int)(this[this.tabletable稼動状況.連結系稼働台数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.連結系稼働台数Column] = value;
                }
            }
            
            public System.Double 連結系稼働率 {
                get {
                    try {
                        return ((System.Double)(this[this.tabletable稼動状況.連結系稼働率Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.連結系稼働率Column] = value;
                }
            }
            
            public string 開始日付 {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.開始日付Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.開始日付Column] = value;
                }
            }
            
            public string 終了日付 {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.終了日付Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.終了日付Column] = value;
                }
            }
            
            public string 地区CD１ {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.地区CD１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.地区CD１Column] = value;
                }
            }
            
            public string 地区CD２ {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.地区CD２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.地区CD２Column] = value;
                }
            }
            
            public string 地区名 {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.地区名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.地区名Column] = value;
                }
            }
            
            public string 小計地区名 {
                get {
                    try {
                        return ((string)(this[this.tabletable稼動状況.小計地区名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.小計地区名Column] = value;
                }
            }
            
            public bool 終了フラグ {
                get {
                    try {
                        return ((bool)(this[this.tabletable稼動状況.終了フラグColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable稼動状況.終了フラグColumn] = value;
                }
            }
            
            public bool Is店所名Null() {
                return this.IsNull(this.tabletable稼動状況.店所名Column);
            }
            
            public void Set店所名Null() {
                this[this.tabletable稼動状況.店所名Column] = System.Convert.DBNull;
            }
            
            public bool Is導入台数Null() {
                return this.IsNull(this.tabletable稼動状況.導入台数Column);
            }
            
            public void Set導入台数Null() {
                this[this.tabletable稼動状況.導入台数Column] = System.Convert.DBNull;
            }
            
            public bool Is稼動台数Null() {
                return this.IsNull(this.tabletable稼動状況.稼動台数Column);
            }
            
            public void Set稼動台数Null() {
                this[this.tabletable稼動状況.稼動台数Column] = System.Convert.DBNull;
            }
            
            public bool Is稼働率Null() {
                return this.IsNull(this.tabletable稼動状況.稼働率Column);
            }
            
            public void Set稼働率Null() {
                this[this.tabletable稼動状況.稼働率Column] = System.Convert.DBNull;
            }
            
            public bool Is地区導入台数Null() {
                return this.IsNull(this.tabletable稼動状況.地区導入台数Column);
            }
            
            public void Set地区導入台数Null() {
                this[this.tabletable稼動状況.地区導入台数Column] = System.Convert.DBNull;
            }
            
            public bool Is地区稼働台数Null() {
                return this.IsNull(this.tabletable稼動状況.地区稼働台数Column);
            }
            
            public void Set地区稼働台数Null() {
                this[this.tabletable稼動状況.地区稼働台数Column] = System.Convert.DBNull;
            }
            
            public bool Is地区稼働率Null() {
                return this.IsNull(this.tabletable稼動状況.地区稼働率Column);
            }
            
            public void Set地区稼働率Null() {
                this[this.tabletable稼動状況.地区稼働率Column] = System.Convert.DBNull;
            }
            
            public bool Is小計導入台数Null() {
                return this.IsNull(this.tabletable稼動状況.小計導入台数Column);
            }
            
            public void Set小計導入台数Null() {
                this[this.tabletable稼動状況.小計導入台数Column] = System.Convert.DBNull;
            }
            
            public bool Is小計稼働台数Null() {
                return this.IsNull(this.tabletable稼動状況.小計稼働台数Column);
            }
            
            public void Set小計稼働台数Null() {
                this[this.tabletable稼動状況.小計稼働台数Column] = System.Convert.DBNull;
            }
            
            public bool Is小計稼働率Null() {
                return this.IsNull(this.tabletable稼動状況.小計稼働率Column);
            }
            
            public void Set小計稼働率Null() {
                this[this.tabletable稼動状況.小計稼働率Column] = System.Convert.DBNull;
            }
            
            public bool Is本体系導入台数Null() {
                return this.IsNull(this.tabletable稼動状況.本体系導入台数Column);
            }
            
            public void Set本体系導入台数Null() {
                this[this.tabletable稼動状況.本体系導入台数Column] = System.Convert.DBNull;
            }
            
            public bool Is本体系稼働台数Null() {
                return this.IsNull(this.tabletable稼動状況.本体系稼働台数Column);
            }
            
            public void Set本体系稼働台数Null() {
                this[this.tabletable稼動状況.本体系稼働台数Column] = System.Convert.DBNull;
            }
            
            public bool Is本体系稼働率Null() {
                return this.IsNull(this.tabletable稼動状況.本体系稼働率Column);
            }
            
            public void Set本体系稼働率Null() {
                this[this.tabletable稼動状況.本体系稼働率Column] = System.Convert.DBNull;
            }
            
            public bool Is関連系導入台数Null() {
                return this.IsNull(this.tabletable稼動状況.関連系導入台数Column);
            }
            
            public void Set関連系導入台数Null() {
                this[this.tabletable稼動状況.関連系導入台数Column] = System.Convert.DBNull;
            }
            
            public bool Is関連系稼働台数Null() {
                return this.IsNull(this.tabletable稼動状況.関連系稼働台数Column);
            }
            
            public void Set関連系稼働台数Null() {
                this[this.tabletable稼動状況.関連系稼働台数Column] = System.Convert.DBNull;
            }
            
            public bool Is関連系稼働率Null() {
                return this.IsNull(this.tabletable稼動状況.関連系稼働率Column);
            }
            
            public void Set関連系稼働率Null() {
                this[this.tabletable稼動状況.関連系稼働率Column] = System.Convert.DBNull;
            }
            
            public bool Is連結系導入台数Null() {
                return this.IsNull(this.tabletable稼動状況.連結系導入台数Column);
            }
            
            public void Set連結系導入台数Null() {
                this[this.tabletable稼動状況.連結系導入台数Column] = System.Convert.DBNull;
            }
            
            public bool Is連結系稼働台数Null() {
                return this.IsNull(this.tabletable稼動状況.連結系稼働台数Column);
            }
            
            public void Set連結系稼働台数Null() {
                this[this.tabletable稼動状況.連結系稼働台数Column] = System.Convert.DBNull;
            }
            
            public bool Is連結系稼働率Null() {
                return this.IsNull(this.tabletable稼動状況.連結系稼働率Column);
            }
            
            public void Set連結系稼働率Null() {
                this[this.tabletable稼動状況.連結系稼働率Column] = System.Convert.DBNull;
            }
            
            public bool Is開始日付Null() {
                return this.IsNull(this.tabletable稼動状況.開始日付Column);
            }
            
            public void Set開始日付Null() {
                this[this.tabletable稼動状況.開始日付Column] = System.Convert.DBNull;
            }
            
            public bool Is終了日付Null() {
                return this.IsNull(this.tabletable稼動状況.終了日付Column);
            }
            
            public void Set終了日付Null() {
                this[this.tabletable稼動状況.終了日付Column] = System.Convert.DBNull;
            }
            
            public bool Is地区CD１Null() {
                return this.IsNull(this.tabletable稼動状況.地区CD１Column);
            }
            
            public void Set地区CD１Null() {
                this[this.tabletable稼動状況.地区CD１Column] = System.Convert.DBNull;
            }
            
            public bool Is地区CD２Null() {
                return this.IsNull(this.tabletable稼動状況.地区CD２Column);
            }
            
            public void Set地区CD２Null() {
                this[this.tabletable稼動状況.地区CD２Column] = System.Convert.DBNull;
            }
            
            public bool Is地区名Null() {
                return this.IsNull(this.tabletable稼動状況.地区名Column);
            }
            
            public void Set地区名Null() {
                this[this.tabletable稼動状況.地区名Column] = System.Convert.DBNull;
            }
            
            public bool Is小計地区名Null() {
                return this.IsNull(this.tabletable稼動状況.小計地区名Column);
            }
            
            public void Set小計地区名Null() {
                this[this.tabletable稼動状況.小計地区名Column] = System.Convert.DBNull;
            }
            
            public bool Is終了フラグNull() {
                return this.IsNull(this.tabletable稼動状況.終了フラグColumn);
            }
            
            public void Set終了フラグNull() {
                this[this.tabletable稼動状況.終了フラグColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table稼動状況RowChangeEvent : EventArgs {
            
            private table稼動状況Row eventRow;
            
            private DataRowAction eventAction;
            
            public table稼動状況RowChangeEvent(table稼動状況Row row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public table稼動状況Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
