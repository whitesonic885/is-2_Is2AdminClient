//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace is2AdminClient {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class 契約書データ : DataSet {
        
        private table契約書DataTable tabletable契約書;
        
        public 契約書データ() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected 契約書データ(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["table契約書"] != null)) {
                    this.Tables.Add(new table契約書DataTable(ds.Tables["table契約書"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public table契約書DataTable table契約書 {
            get {
                return this.tabletable契約書;
            }
        }
        
        public override DataSet Clone() {
            契約書データ cln = ((契約書データ)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["table契約書"] != null)) {
                this.Tables.Add(new table契約書DataTable(ds.Tables["table契約書"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletable契約書 = ((table契約書DataTable)(this.Tables["table契約書"]));
            if ((this.tabletable契約書 != null)) {
                this.tabletable契約書.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "契約書データ";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/契約書データ.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletable契約書 = new table契約書DataTable();
            this.Tables.Add(this.tabletable契約書);
        }
        
        private bool ShouldSerializetable契約書() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void table契約書RowChangeEventHandler(object sender, table契約書RowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table契約書DataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column申込者郵便番号;
            
            private DataColumn column申込者住所県;
            
            private DataColumn column申込者住所１;
            
            private DataColumn column申込者住所２;
            
            private DataColumn column申込者名フリガナ;
            
            private DataColumn column申込者名;
            
            private DataColumn column申込者電話番号;
            
            private DataColumn column申込者ＦＡＸ番号;
            
            private DataColumn column受店所郵便番号;
            
            private DataColumn column受店所住所県;
            
            private DataColumn column受店所住所１;
            
            private DataColumn column受店所住所２;
            
            private DataColumn column受店所名;
            
            private DataColumn column受店所電話番号;
            
            private DataColumn column受店所ＦＡＸ番号;
            
            private DataColumn column設置場所郵便番号;
            
            private DataColumn column設置場所住所県;
            
            private DataColumn column設置場所住所１;
            
            private DataColumn column設置場所住所２;
            
            private DataColumn column設置場所法人名フリガナ;
            
            private DataColumn column設置場所法人名;
            
            private DataColumn column設置場所担当者役職;
            
            private DataColumn column設置場所担当者名;
            
            private DataColumn column設置場所電話番号;
            
            private DataColumn column設置場所ＦＡＸ番号;
            
            private DataColumn column頁見出し;
            
            private DataColumn column申込管理番号;
            
            private DataColumn column申込管理番号バーコード;
            
            internal table契約書DataTable() : 
                    base("table契約書") {
                this.InitClass();
            }
            
            internal table契約書DataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 申込者郵便番号Column {
                get {
                    return this.column申込者郵便番号;
                }
            }
            
            internal DataColumn 申込者住所県Column {
                get {
                    return this.column申込者住所県;
                }
            }
            
            internal DataColumn 申込者住所１Column {
                get {
                    return this.column申込者住所１;
                }
            }
            
            internal DataColumn 申込者住所２Column {
                get {
                    return this.column申込者住所２;
                }
            }
            
            internal DataColumn 申込者名フリガナColumn {
                get {
                    return this.column申込者名フリガナ;
                }
            }
            
            internal DataColumn 申込者名Column {
                get {
                    return this.column申込者名;
                }
            }
            
            internal DataColumn 申込者電話番号Column {
                get {
                    return this.column申込者電話番号;
                }
            }
            
            internal DataColumn 申込者ＦＡＸ番号Column {
                get {
                    return this.column申込者ＦＡＸ番号;
                }
            }
            
            internal DataColumn 受店所郵便番号Column {
                get {
                    return this.column受店所郵便番号;
                }
            }
            
            internal DataColumn 受店所住所県Column {
                get {
                    return this.column受店所住所県;
                }
            }
            
            internal DataColumn 受店所住所１Column {
                get {
                    return this.column受店所住所１;
                }
            }
            
            internal DataColumn 受店所住所２Column {
                get {
                    return this.column受店所住所２;
                }
            }
            
            internal DataColumn 受店所名Column {
                get {
                    return this.column受店所名;
                }
            }
            
            internal DataColumn 受店所電話番号Column {
                get {
                    return this.column受店所電話番号;
                }
            }
            
            internal DataColumn 受店所ＦＡＸ番号Column {
                get {
                    return this.column受店所ＦＡＸ番号;
                }
            }
            
            internal DataColumn 設置場所郵便番号Column {
                get {
                    return this.column設置場所郵便番号;
                }
            }
            
            internal DataColumn 設置場所住所県Column {
                get {
                    return this.column設置場所住所県;
                }
            }
            
            internal DataColumn 設置場所住所１Column {
                get {
                    return this.column設置場所住所１;
                }
            }
            
            internal DataColumn 設置場所住所２Column {
                get {
                    return this.column設置場所住所２;
                }
            }
            
            internal DataColumn 設置場所法人名フリガナColumn {
                get {
                    return this.column設置場所法人名フリガナ;
                }
            }
            
            internal DataColumn 設置場所法人名Column {
                get {
                    return this.column設置場所法人名;
                }
            }
            
            internal DataColumn 設置場所担当者役職Column {
                get {
                    return this.column設置場所担当者役職;
                }
            }
            
            internal DataColumn 設置場所担当者名Column {
                get {
                    return this.column設置場所担当者名;
                }
            }
            
            internal DataColumn 設置場所電話番号Column {
                get {
                    return this.column設置場所電話番号;
                }
            }
            
            internal DataColumn 設置場所ＦＡＸ番号Column {
                get {
                    return this.column設置場所ＦＡＸ番号;
                }
            }
            
            internal DataColumn 頁見出しColumn {
                get {
                    return this.column頁見出し;
                }
            }
            
            internal DataColumn 申込管理番号Column {
                get {
                    return this.column申込管理番号;
                }
            }
            
            internal DataColumn 申込管理番号バーコードColumn {
                get {
                    return this.column申込管理番号バーコード;
                }
            }
            
            public table契約書Row this[int index] {
                get {
                    return ((table契約書Row)(this.Rows[index]));
                }
            }
            
            public event table契約書RowChangeEventHandler table契約書RowChanged;
            
            public event table契約書RowChangeEventHandler table契約書RowChanging;
            
            public event table契約書RowChangeEventHandler table契約書RowDeleted;
            
            public event table契約書RowChangeEventHandler table契約書RowDeleting;
            
            public void Addtable契約書Row(table契約書Row row) {
                this.Rows.Add(row);
            }
            
            public table契約書Row Addtable契約書Row(
                        string 申込者郵便番号, 
                        string 申込者住所県, 
                        string 申込者住所１, 
                        string 申込者住所２, 
                        string 申込者名フリガナ, 
                        string 申込者名, 
                        string 申込者電話番号, 
                        string 申込者ＦＡＸ番号, 
                        string 受店所郵便番号, 
                        string 受店所住所県, 
                        string 受店所住所１, 
                        string 受店所住所２, 
                        string 受店所名, 
                        string 受店所電話番号, 
                        string 受店所ＦＡＸ番号, 
                        string 設置場所郵便番号, 
                        string 設置場所住所県, 
                        string 設置場所住所１, 
                        string 設置場所住所２, 
                        string 設置場所法人名フリガナ, 
                        string 設置場所法人名, 
                        string 設置場所担当者役職, 
                        string 設置場所担当者名, 
                        string 設置場所電話番号, 
                        string 設置場所ＦＡＸ番号, 
                        string 頁見出し, 
                        string 申込管理番号, 
                        string 申込管理番号バーコード) {
                table契約書Row rowtable契約書Row = ((table契約書Row)(this.NewRow()));
                rowtable契約書Row.ItemArray = new object[] {
                        申込者郵便番号,
                        申込者住所県,
                        申込者住所１,
                        申込者住所２,
                        申込者名フリガナ,
                        申込者名,
                        申込者電話番号,
                        申込者ＦＡＸ番号,
                        受店所郵便番号,
                        受店所住所県,
                        受店所住所１,
                        受店所住所２,
                        受店所名,
                        受店所電話番号,
                        受店所ＦＡＸ番号,
                        設置場所郵便番号,
                        設置場所住所県,
                        設置場所住所１,
                        設置場所住所２,
                        設置場所法人名フリガナ,
                        設置場所法人名,
                        設置場所担当者役職,
                        設置場所担当者名,
                        設置場所電話番号,
                        設置場所ＦＡＸ番号,
                        頁見出し,
                        申込管理番号,
                        申込管理番号バーコード};
                this.Rows.Add(rowtable契約書Row);
                return rowtable契約書Row;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                table契約書DataTable cln = ((table契約書DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new table契約書DataTable();
            }
            
            internal void InitVars() {
                this.column申込者郵便番号 = this.Columns["申込者郵便番号"];
                this.column申込者住所県 = this.Columns["申込者住所県"];
                this.column申込者住所１ = this.Columns["申込者住所１"];
                this.column申込者住所２ = this.Columns["申込者住所２"];
                this.column申込者名フリガナ = this.Columns["申込者名フリガナ"];
                this.column申込者名 = this.Columns["申込者名"];
                this.column申込者電話番号 = this.Columns["申込者電話番号"];
                this.column申込者ＦＡＸ番号 = this.Columns["申込者ＦＡＸ番号"];
                this.column受店所郵便番号 = this.Columns["受店所郵便番号"];
                this.column受店所住所県 = this.Columns["受店所住所県"];
                this.column受店所住所１ = this.Columns["受店所住所１"];
                this.column受店所住所２ = this.Columns["受店所住所２"];
                this.column受店所名 = this.Columns["受店所名"];
                this.column受店所電話番号 = this.Columns["受店所電話番号"];
                this.column受店所ＦＡＸ番号 = this.Columns["受店所ＦＡＸ番号"];
                this.column設置場所郵便番号 = this.Columns["設置場所郵便番号"];
                this.column設置場所住所県 = this.Columns["設置場所住所県"];
                this.column設置場所住所１ = this.Columns["設置場所住所１"];
                this.column設置場所住所２ = this.Columns["設置場所住所２"];
                this.column設置場所法人名フリガナ = this.Columns["設置場所法人名フリガナ"];
                this.column設置場所法人名 = this.Columns["設置場所法人名"];
                this.column設置場所担当者役職 = this.Columns["設置場所担当者役職"];
                this.column設置場所担当者名 = this.Columns["設置場所担当者名"];
                this.column設置場所電話番号 = this.Columns["設置場所電話番号"];
                this.column設置場所ＦＡＸ番号 = this.Columns["設置場所ＦＡＸ番号"];
                this.column頁見出し = this.Columns["頁見出し"];
                this.column申込管理番号 = this.Columns["申込管理番号"];
                this.column申込管理番号バーコード = this.Columns["申込管理番号バーコード"];
            }
            
            private void InitClass() {
                this.column申込者郵便番号 = new DataColumn("申込者郵便番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込者郵便番号);
                this.column申込者住所県 = new DataColumn("申込者住所県", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込者住所県);
                this.column申込者住所１ = new DataColumn("申込者住所１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込者住所１);
                this.column申込者住所２ = new DataColumn("申込者住所２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込者住所２);
                this.column申込者名フリガナ = new DataColumn("申込者名フリガナ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込者名フリガナ);
                this.column申込者名 = new DataColumn("申込者名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込者名);
                this.column申込者電話番号 = new DataColumn("申込者電話番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込者電話番号);
                this.column申込者ＦＡＸ番号 = new DataColumn("申込者ＦＡＸ番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込者ＦＡＸ番号);
                this.column受店所郵便番号 = new DataColumn("受店所郵便番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column受店所郵便番号);
                this.column受店所住所県 = new DataColumn("受店所住所県", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column受店所住所県);
                this.column受店所住所１ = new DataColumn("受店所住所１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column受店所住所１);
                this.column受店所住所２ = new DataColumn("受店所住所２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column受店所住所２);
                this.column受店所名 = new DataColumn("受店所名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column受店所名);
                this.column受店所電話番号 = new DataColumn("受店所電話番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column受店所電話番号);
                this.column受店所ＦＡＸ番号 = new DataColumn("受店所ＦＡＸ番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column受店所ＦＡＸ番号);
                this.column設置場所郵便番号 = new DataColumn("設置場所郵便番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所郵便番号);
                this.column設置場所住所県 = new DataColumn("設置場所住所県", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所住所県);
                this.column設置場所住所１ = new DataColumn("設置場所住所１", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所住所１);
                this.column設置場所住所２ = new DataColumn("設置場所住所２", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所住所２);
                this.column設置場所法人名フリガナ = new DataColumn("設置場所法人名フリガナ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所法人名フリガナ);
                this.column設置場所法人名 = new DataColumn("設置場所法人名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所法人名);
                this.column設置場所担当者役職 = new DataColumn("設置場所担当者役職", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所担当者役職);
                this.column設置場所担当者名 = new DataColumn("設置場所担当者名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所担当者名);
                this.column設置場所電話番号 = new DataColumn("設置場所電話番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所電話番号);
                this.column設置場所ＦＡＸ番号 = new DataColumn("設置場所ＦＡＸ番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column設置場所ＦＡＸ番号);
                this.column頁見出し = new DataColumn("頁見出し", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column頁見出し);
                this.column申込管理番号 = new DataColumn("申込管理番号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込管理番号);
                this.column申込管理番号バーコード = new DataColumn("申込管理番号バーコード", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column申込管理番号バーコード);
            }
            
            public table契約書Row Newtable契約書Row() {
                return ((table契約書Row)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new table契約書Row(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(table契約書Row);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.table契約書RowChanged != null)) {
                    this.table契約書RowChanged(this, new table契約書RowChangeEvent(((table契約書Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.table契約書RowChanging != null)) {
                    this.table契約書RowChanging(this, new table契約書RowChangeEvent(((table契約書Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.table契約書RowDeleted != null)) {
                    this.table契約書RowDeleted(this, new table契約書RowChangeEvent(((table契約書Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.table契約書RowDeleting != null)) {
                    this.table契約書RowDeleting(this, new table契約書RowChangeEvent(((table契約書Row)(e.Row)), e.Action));
                }
            }
            
            public void Removetable契約書Row(table契約書Row row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table契約書Row : DataRow {
            
            private table契約書DataTable tabletable契約書;
            
            internal table契約書Row(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletable契約書 = ((table契約書DataTable)(this.Table));
            }
            
            public string 申込者郵便番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込者郵便番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込者郵便番号Column] = value;
                }
            }
            
            public string 申込者住所県 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込者住所県Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込者住所県Column] = value;
                }
            }
            
            public string 申込者住所１ {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込者住所１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込者住所１Column] = value;
                }
            }
            
            public string 申込者住所２ {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込者住所２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込者住所２Column] = value;
                }
            }
            
            public string 申込者名フリガナ {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込者名フリガナColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込者名フリガナColumn] = value;
                }
            }
            
            public string 申込者名 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込者名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込者名Column] = value;
                }
            }
            
            public string 申込者電話番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込者電話番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込者電話番号Column] = value;
                }
            }
            
            public string 申込者ＦＡＸ番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込者ＦＡＸ番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込者ＦＡＸ番号Column] = value;
                }
            }
            
            public string 受店所郵便番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.受店所郵便番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.受店所郵便番号Column] = value;
                }
            }
            
            public string 受店所住所県 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.受店所住所県Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.受店所住所県Column] = value;
                }
            }
            
            public string 受店所住所１ {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.受店所住所１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.受店所住所１Column] = value;
                }
            }
            
            public string 受店所住所２ {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.受店所住所２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.受店所住所２Column] = value;
                }
            }
            
            public string 受店所名 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.受店所名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.受店所名Column] = value;
                }
            }
            
            public string 受店所電話番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.受店所電話番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.受店所電話番号Column] = value;
                }
            }
            
            public string 受店所ＦＡＸ番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.受店所ＦＡＸ番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.受店所ＦＡＸ番号Column] = value;
                }
            }
            
            public string 設置場所郵便番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所郵便番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所郵便番号Column] = value;
                }
            }
            
            public string 設置場所住所県 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所住所県Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所住所県Column] = value;
                }
            }
            
            public string 設置場所住所１ {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所住所１Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所住所１Column] = value;
                }
            }
            
            public string 設置場所住所２ {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所住所２Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所住所２Column] = value;
                }
            }
            
            public string 設置場所法人名フリガナ {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所法人名フリガナColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所法人名フリガナColumn] = value;
                }
            }
            
            public string 設置場所法人名 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所法人名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所法人名Column] = value;
                }
            }
            
            public string 設置場所担当者役職 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所担当者役職Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所担当者役職Column] = value;
                }
            }
            
            public string 設置場所担当者名 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所担当者名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所担当者名Column] = value;
                }
            }
            
            public string 設置場所電話番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所電話番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所電話番号Column] = value;
                }
            }
            
            public string 設置場所ＦＡＸ番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.設置場所ＦＡＸ番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.設置場所ＦＡＸ番号Column] = value;
                }
            }
            
            public string 頁見出し {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.頁見出しColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.頁見出しColumn] = value;
                }
            }
            
            public string 申込管理番号 {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込管理番号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込管理番号Column] = value;
                }
            }
            
            public string 申込管理番号バーコード {
                get {
                    try {
                        return ((string)(this[this.tabletable契約書.申込管理番号バーコードColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable契約書.申込管理番号バーコードColumn] = value;
                }
            }
            
            public bool Is申込者郵便番号Null() {
                return this.IsNull(this.tabletable契約書.申込者郵便番号Column);
            }
            
            public void Set申込者郵便番号Null() {
                this[this.tabletable契約書.申込者郵便番号Column] = System.Convert.DBNull;
            }
            
            public bool Is申込者住所県Null() {
                return this.IsNull(this.tabletable契約書.申込者住所県Column);
            }
            
            public void Set申込者住所県Null() {
                this[this.tabletable契約書.申込者住所県Column] = System.Convert.DBNull;
            }
            
            public bool Is申込者住所１Null() {
                return this.IsNull(this.tabletable契約書.申込者住所１Column);
            }
            
            public void Set申込者住所１Null() {
                this[this.tabletable契約書.申込者住所１Column] = System.Convert.DBNull;
            }
            
            public bool Is申込者住所２Null() {
                return this.IsNull(this.tabletable契約書.申込者住所２Column);
            }
            
            public void Set申込者住所２Null() {
                this[this.tabletable契約書.申込者住所２Column] = System.Convert.DBNull;
            }
            
            public bool Is申込者名フリガナNull() {
                return this.IsNull(this.tabletable契約書.申込者名フリガナColumn);
            }
            
            public void Set申込者名フリガナNull() {
                this[this.tabletable契約書.申込者名フリガナColumn] = System.Convert.DBNull;
            }
            
            public bool Is申込者名Null() {
                return this.IsNull(this.tabletable契約書.申込者名Column);
            }
            
            public void Set申込者名Null() {
                this[this.tabletable契約書.申込者名Column] = System.Convert.DBNull;
            }
            
            public bool Is申込者電話番号Null() {
                return this.IsNull(this.tabletable契約書.申込者電話番号Column);
            }
            
            public void Set申込者電話番号Null() {
                this[this.tabletable契約書.申込者電話番号Column] = System.Convert.DBNull;
            }
            
            public bool Is申込者ＦＡＸ番号Null() {
                return this.IsNull(this.tabletable契約書.申込者ＦＡＸ番号Column);
            }
            
            public void Set申込者ＦＡＸ番号Null() {
                this[this.tabletable契約書.申込者ＦＡＸ番号Column] = System.Convert.DBNull;
            }
            
            public bool Is受店所郵便番号Null() {
                return this.IsNull(this.tabletable契約書.受店所郵便番号Column);
            }
            
            public void Set受店所郵便番号Null() {
                this[this.tabletable契約書.受店所郵便番号Column] = System.Convert.DBNull;
            }
            
            public bool Is受店所住所県Null() {
                return this.IsNull(this.tabletable契約書.受店所住所県Column);
            }
            
            public void Set受店所住所県Null() {
                this[this.tabletable契約書.受店所住所県Column] = System.Convert.DBNull;
            }
            
            public bool Is受店所住所１Null() {
                return this.IsNull(this.tabletable契約書.受店所住所１Column);
            }
            
            public void Set受店所住所１Null() {
                this[this.tabletable契約書.受店所住所１Column] = System.Convert.DBNull;
            }
            
            public bool Is受店所住所２Null() {
                return this.IsNull(this.tabletable契約書.受店所住所２Column);
            }
            
            public void Set受店所住所２Null() {
                this[this.tabletable契約書.受店所住所２Column] = System.Convert.DBNull;
            }
            
            public bool Is受店所名Null() {
                return this.IsNull(this.tabletable契約書.受店所名Column);
            }
            
            public void Set受店所名Null() {
                this[this.tabletable契約書.受店所名Column] = System.Convert.DBNull;
            }
            
            public bool Is受店所電話番号Null() {
                return this.IsNull(this.tabletable契約書.受店所電話番号Column);
            }
            
            public void Set受店所電話番号Null() {
                this[this.tabletable契約書.受店所電話番号Column] = System.Convert.DBNull;
            }
            
            public bool Is受店所ＦＡＸ番号Null() {
                return this.IsNull(this.tabletable契約書.受店所ＦＡＸ番号Column);
            }
            
            public void Set受店所ＦＡＸ番号Null() {
                this[this.tabletable契約書.受店所ＦＡＸ番号Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所郵便番号Null() {
                return this.IsNull(this.tabletable契約書.設置場所郵便番号Column);
            }
            
            public void Set設置場所郵便番号Null() {
                this[this.tabletable契約書.設置場所郵便番号Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所住所県Null() {
                return this.IsNull(this.tabletable契約書.設置場所住所県Column);
            }
            
            public void Set設置場所住所県Null() {
                this[this.tabletable契約書.設置場所住所県Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所住所１Null() {
                return this.IsNull(this.tabletable契約書.設置場所住所１Column);
            }
            
            public void Set設置場所住所１Null() {
                this[this.tabletable契約書.設置場所住所１Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所住所２Null() {
                return this.IsNull(this.tabletable契約書.設置場所住所２Column);
            }
            
            public void Set設置場所住所２Null() {
                this[this.tabletable契約書.設置場所住所２Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所法人名フリガナNull() {
                return this.IsNull(this.tabletable契約書.設置場所法人名フリガナColumn);
            }
            
            public void Set設置場所法人名フリガナNull() {
                this[this.tabletable契約書.設置場所法人名フリガナColumn] = System.Convert.DBNull;
            }
            
            public bool Is設置場所法人名Null() {
                return this.IsNull(this.tabletable契約書.設置場所法人名Column);
            }
            
            public void Set設置場所法人名Null() {
                this[this.tabletable契約書.設置場所法人名Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所担当者役職Null() {
                return this.IsNull(this.tabletable契約書.設置場所担当者役職Column);
            }
            
            public void Set設置場所担当者役職Null() {
                this[this.tabletable契約書.設置場所担当者役職Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所担当者名Null() {
                return this.IsNull(this.tabletable契約書.設置場所担当者名Column);
            }
            
            public void Set設置場所担当者名Null() {
                this[this.tabletable契約書.設置場所担当者名Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所電話番号Null() {
                return this.IsNull(this.tabletable契約書.設置場所電話番号Column);
            }
            
            public void Set設置場所電話番号Null() {
                this[this.tabletable契約書.設置場所電話番号Column] = System.Convert.DBNull;
            }
            
            public bool Is設置場所ＦＡＸ番号Null() {
                return this.IsNull(this.tabletable契約書.設置場所ＦＡＸ番号Column);
            }
            
            public void Set設置場所ＦＡＸ番号Null() {
                this[this.tabletable契約書.設置場所ＦＡＸ番号Column] = System.Convert.DBNull;
            }
            
            public bool Is頁見出しNull() {
                return this.IsNull(this.tabletable契約書.頁見出しColumn);
            }
            
            public void Set頁見出しNull() {
                this[this.tabletable契約書.頁見出しColumn] = System.Convert.DBNull;
            }
            
            public bool Is申込管理番号Null() {
                return this.IsNull(this.tabletable契約書.申込管理番号Column);
            }
            
            public void Set申込管理番号Null() {
                this[this.tabletable契約書.申込管理番号Column] = System.Convert.DBNull;
            }
            
            public bool Is申込管理番号バーコードNull() {
                return this.IsNull(this.tabletable契約書.申込管理番号バーコードColumn);
            }
            
            public void Set申込管理番号バーコードNull() {
                this[this.tabletable契約書.申込管理番号バーコードColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table契約書RowChangeEvent : EventArgs {
            
            private table契約書Row eventRow;
            
            private DataRowAction eventAction;
            
            public table契約書RowChangeEvent(table契約書Row row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public table契約書Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
