//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace is2AdminClient {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class 出荷状況データ : DataSet {
        
        private table出荷状況DataTable tabletable出荷状況;
        
        public 出荷状況データ() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected 出荷状況データ(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["table出荷状況"] != null)) {
                    this.Tables.Add(new table出荷状況DataTable(ds.Tables["table出荷状況"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public table出荷状況DataTable table出荷状況 {
            get {
                return this.tabletable出荷状況;
            }
        }
        
        public override DataSet Clone() {
            出荷状況データ cln = ((出荷状況データ)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["table出荷状況"] != null)) {
                this.Tables.Add(new table出荷状況DataTable(ds.Tables["table出荷状況"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletable出荷状況 = ((table出荷状況DataTable)(this.Tables["table出荷状況"]));
            if ((this.tabletable出荷状況 != null)) {
                this.tabletable出荷状況.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "出荷状況データ";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/出荷状況データ.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletable出荷状況 = new table出荷状況DataTable();
            this.Tables.Add(this.tabletable出荷状況);
        }
        
        private bool ShouldSerializetable出荷状況() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void table出荷状況RowChangeEventHandler(object sender, table出荷状況RowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table出荷状況DataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column地区１ＣＤ;
            
            private DataColumn column地区２ＣＤ;
            
            private DataColumn column店所ＣＤ;
            
            private DataColumn column店所名;
            
            private DataColumn column開始日;
            
            private DataColumn column終了日;
            
            private DataColumn column会員ＣＤ;
            
            private DataColumn column会員名;
            
            private DataColumn column部門ＣＤ;
            
            private DataColumn column部門名;
            
            private DataColumn column件数;
            
            private DataColumn column個数;
            
            private DataColumn column重量;
            
            private DataColumn column運賃;
            
            private DataColumn column中継;
            
            private DataColumn column保険;
            
            internal table出荷状況DataTable() : 
                    base("table出荷状況") {
                this.InitClass();
            }
            
            internal table出荷状況DataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 地区１ＣＤColumn {
                get {
                    return this.column地区１ＣＤ;
                }
            }
            
            internal DataColumn 地区２ＣＤColumn {
                get {
                    return this.column地区２ＣＤ;
                }
            }
            
            internal DataColumn 店所ＣＤColumn {
                get {
                    return this.column店所ＣＤ;
                }
            }
            
            internal DataColumn 店所名Column {
                get {
                    return this.column店所名;
                }
            }
            
            internal DataColumn 開始日Column {
                get {
                    return this.column開始日;
                }
            }
            
            internal DataColumn 終了日Column {
                get {
                    return this.column終了日;
                }
            }
            
            internal DataColumn 会員ＣＤColumn {
                get {
                    return this.column会員ＣＤ;
                }
            }
            
            internal DataColumn 会員名Column {
                get {
                    return this.column会員名;
                }
            }
            
            internal DataColumn 部門ＣＤColumn {
                get {
                    return this.column部門ＣＤ;
                }
            }
            
            internal DataColumn 部門名Column {
                get {
                    return this.column部門名;
                }
            }
            
            internal DataColumn 件数Column {
                get {
                    return this.column件数;
                }
            }
            
            internal DataColumn 個数Column {
                get {
                    return this.column個数;
                }
            }
            
            internal DataColumn 重量Column {
                get {
                    return this.column重量;
                }
            }
            
            internal DataColumn 運賃Column {
                get {
                    return this.column運賃;
                }
            }
            
            internal DataColumn 中継Column {
                get {
                    return this.column中継;
                }
            }
            
            internal DataColumn 保険Column {
                get {
                    return this.column保険;
                }
            }
            
            public table出荷状況Row this[int index] {
                get {
                    return ((table出荷状況Row)(this.Rows[index]));
                }
            }
            
            public event table出荷状況RowChangeEventHandler table出荷状況RowChanged;
            
            public event table出荷状況RowChangeEventHandler table出荷状況RowChanging;
            
            public event table出荷状況RowChangeEventHandler table出荷状況RowDeleted;
            
            public event table出荷状況RowChangeEventHandler table出荷状況RowDeleting;
            
            public void Addtable出荷状況Row(table出荷状況Row row) {
                this.Rows.Add(row);
            }
            
            public table出荷状況Row Addtable出荷状況Row(
                        string 地区１ＣＤ, 
                        string 地区２ＣＤ, 
                        string 店所ＣＤ, 
                        string 店所名, 
                        string 開始日, 
                        string 終了日, 
                        string 会員ＣＤ, 
                        string 会員名, 
                        string 部門ＣＤ, 
                        string 部門名, 
                        System.Decimal 件数, 
                        System.Decimal 個数, 
                        System.Decimal 重量, 
                        System.Decimal 運賃, 
                        System.Decimal 中継, 
                        System.Decimal 保険) {
                table出荷状況Row rowtable出荷状況Row = ((table出荷状況Row)(this.NewRow()));
                rowtable出荷状況Row.ItemArray = new object[] {
                        地区１ＣＤ,
                        地区２ＣＤ,
                        店所ＣＤ,
                        店所名,
                        開始日,
                        終了日,
                        会員ＣＤ,
                        会員名,
                        部門ＣＤ,
                        部門名,
                        件数,
                        個数,
                        重量,
                        運賃,
                        中継,
                        保険};
                this.Rows.Add(rowtable出荷状況Row);
                return rowtable出荷状況Row;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                table出荷状況DataTable cln = ((table出荷状況DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new table出荷状況DataTable();
            }
            
            internal void InitVars() {
                this.column地区１ＣＤ = this.Columns["地区１ＣＤ"];
                this.column地区２ＣＤ = this.Columns["地区２ＣＤ"];
                this.column店所ＣＤ = this.Columns["店所ＣＤ"];
                this.column店所名 = this.Columns["店所名"];
                this.column開始日 = this.Columns["開始日"];
                this.column終了日 = this.Columns["終了日"];
                this.column会員ＣＤ = this.Columns["会員ＣＤ"];
                this.column会員名 = this.Columns["会員名"];
                this.column部門ＣＤ = this.Columns["部門ＣＤ"];
                this.column部門名 = this.Columns["部門名"];
                this.column件数 = this.Columns["件数"];
                this.column個数 = this.Columns["個数"];
                this.column重量 = this.Columns["重量"];
                this.column運賃 = this.Columns["運賃"];
                this.column中継 = this.Columns["中継"];
                this.column保険 = this.Columns["保険"];
            }
            
            private void InitClass() {
                this.column地区１ＣＤ = new DataColumn("地区１ＣＤ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column地区１ＣＤ);
                this.column地区２ＣＤ = new DataColumn("地区２ＣＤ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column地区２ＣＤ);
                this.column店所ＣＤ = new DataColumn("店所ＣＤ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column店所ＣＤ);
                this.column店所名 = new DataColumn("店所名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column店所名);
                this.column開始日 = new DataColumn("開始日", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column開始日);
                this.column終了日 = new DataColumn("終了日", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column終了日);
                this.column会員ＣＤ = new DataColumn("会員ＣＤ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column会員ＣＤ);
                this.column会員名 = new DataColumn("会員名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column会員名);
                this.column部門ＣＤ = new DataColumn("部門ＣＤ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column部門ＣＤ);
                this.column部門名 = new DataColumn("部門名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column部門名);
                this.column件数 = new DataColumn("件数", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column件数);
                this.column個数 = new DataColumn("個数", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column個数);
                this.column重量 = new DataColumn("重量", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column重量);
                this.column運賃 = new DataColumn("運賃", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column運賃);
                this.column中継 = new DataColumn("中継", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column中継);
                this.column保険 = new DataColumn("保険", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column保険);
                this.column地区１ＣＤ.AllowDBNull = false;
                this.column地区２ＣＤ.AllowDBNull = false;
                this.column開始日.AllowDBNull = false;
                this.column終了日.AllowDBNull = false;
            }
            
            public table出荷状況Row Newtable出荷状況Row() {
                return ((table出荷状況Row)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new table出荷状況Row(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(table出荷状況Row);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.table出荷状況RowChanged != null)) {
                    this.table出荷状況RowChanged(this, new table出荷状況RowChangeEvent(((table出荷状況Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.table出荷状況RowChanging != null)) {
                    this.table出荷状況RowChanging(this, new table出荷状況RowChangeEvent(((table出荷状況Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.table出荷状況RowDeleted != null)) {
                    this.table出荷状況RowDeleted(this, new table出荷状況RowChangeEvent(((table出荷状況Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.table出荷状況RowDeleting != null)) {
                    this.table出荷状況RowDeleting(this, new table出荷状況RowChangeEvent(((table出荷状況Row)(e.Row)), e.Action));
                }
            }
            
            public void Removetable出荷状況Row(table出荷状況Row row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table出荷状況Row : DataRow {
            
            private table出荷状況DataTable tabletable出荷状況;
            
            internal table出荷状況Row(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletable出荷状況 = ((table出荷状況DataTable)(this.Table));
            }
            
            public string 地区１ＣＤ {
                get {
                    return ((string)(this[this.tabletable出荷状況.地区１ＣＤColumn]));
                }
                set {
                    this[this.tabletable出荷状況.地区１ＣＤColumn] = value;
                }
            }
            
            public string 地区２ＣＤ {
                get {
                    return ((string)(this[this.tabletable出荷状況.地区２ＣＤColumn]));
                }
                set {
                    this[this.tabletable出荷状況.地区２ＣＤColumn] = value;
                }
            }
            
            public string 店所ＣＤ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷状況.店所ＣＤColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.店所ＣＤColumn] = value;
                }
            }
            
            public string 店所名 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷状況.店所名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.店所名Column] = value;
                }
            }
            
            public string 開始日 {
                get {
                    return ((string)(this[this.tabletable出荷状況.開始日Column]));
                }
                set {
                    this[this.tabletable出荷状況.開始日Column] = value;
                }
            }
            
            public string 終了日 {
                get {
                    return ((string)(this[this.tabletable出荷状況.終了日Column]));
                }
                set {
                    this[this.tabletable出荷状況.終了日Column] = value;
                }
            }
            
            public string 会員ＣＤ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷状況.会員ＣＤColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.会員ＣＤColumn] = value;
                }
            }
            
            public string 会員名 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷状況.会員名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.会員名Column] = value;
                }
            }
            
            public string 部門ＣＤ {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷状況.部門ＣＤColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.部門ＣＤColumn] = value;
                }
            }
            
            public string 部門名 {
                get {
                    try {
                        return ((string)(this[this.tabletable出荷状況.部門名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.部門名Column] = value;
                }
            }
            
            public System.Decimal 件数 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletable出荷状況.件数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.件数Column] = value;
                }
            }
            
            public System.Decimal 個数 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletable出荷状況.個数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.個数Column] = value;
                }
            }
            
            public System.Decimal 重量 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletable出荷状況.重量Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.重量Column] = value;
                }
            }
            
            public System.Decimal 運賃 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletable出荷状況.運賃Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.運賃Column] = value;
                }
            }
            
            public System.Decimal 中継 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletable出荷状況.中継Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.中継Column] = value;
                }
            }
            
            public System.Decimal 保険 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletable出荷状況.保険Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("値は DBNull であるため、取得できません。", e);
                    }
                }
                set {
                    this[this.tabletable出荷状況.保険Column] = value;
                }
            }
            
            public bool Is店所ＣＤNull() {
                return this.IsNull(this.tabletable出荷状況.店所ＣＤColumn);
            }
            
            public void Set店所ＣＤNull() {
                this[this.tabletable出荷状況.店所ＣＤColumn] = System.Convert.DBNull;
            }
            
            public bool Is店所名Null() {
                return this.IsNull(this.tabletable出荷状況.店所名Column);
            }
            
            public void Set店所名Null() {
                this[this.tabletable出荷状況.店所名Column] = System.Convert.DBNull;
            }
            
            public bool Is会員ＣＤNull() {
                return this.IsNull(this.tabletable出荷状況.会員ＣＤColumn);
            }
            
            public void Set会員ＣＤNull() {
                this[this.tabletable出荷状況.会員ＣＤColumn] = System.Convert.DBNull;
            }
            
            public bool Is会員名Null() {
                return this.IsNull(this.tabletable出荷状況.会員名Column);
            }
            
            public void Set会員名Null() {
                this[this.tabletable出荷状況.会員名Column] = System.Convert.DBNull;
            }
            
            public bool Is部門ＣＤNull() {
                return this.IsNull(this.tabletable出荷状況.部門ＣＤColumn);
            }
            
            public void Set部門ＣＤNull() {
                this[this.tabletable出荷状況.部門ＣＤColumn] = System.Convert.DBNull;
            }
            
            public bool Is部門名Null() {
                return this.IsNull(this.tabletable出荷状況.部門名Column);
            }
            
            public void Set部門名Null() {
                this[this.tabletable出荷状況.部門名Column] = System.Convert.DBNull;
            }
            
            public bool Is件数Null() {
                return this.IsNull(this.tabletable出荷状況.件数Column);
            }
            
            public void Set件数Null() {
                this[this.tabletable出荷状況.件数Column] = System.Convert.DBNull;
            }
            
            public bool Is個数Null() {
                return this.IsNull(this.tabletable出荷状況.個数Column);
            }
            
            public void Set個数Null() {
                this[this.tabletable出荷状況.個数Column] = System.Convert.DBNull;
            }
            
            public bool Is重量Null() {
                return this.IsNull(this.tabletable出荷状況.重量Column);
            }
            
            public void Set重量Null() {
                this[this.tabletable出荷状況.重量Column] = System.Convert.DBNull;
            }
            
            public bool Is運賃Null() {
                return this.IsNull(this.tabletable出荷状況.運賃Column);
            }
            
            public void Set運賃Null() {
                this[this.tabletable出荷状況.運賃Column] = System.Convert.DBNull;
            }
            
            public bool Is中継Null() {
                return this.IsNull(this.tabletable出荷状況.中継Column);
            }
            
            public void Set中継Null() {
                this[this.tabletable出荷状況.中継Column] = System.Convert.DBNull;
            }
            
            public bool Is保険Null() {
                return this.IsNull(this.tabletable出荷状況.保険Column);
            }
            
            public void Set保険Null() {
                this[this.tabletable出荷状況.保険Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class table出荷状況RowChangeEvent : EventArgs {
            
            private table出荷状況Row eventRow;
            
            private DataRowAction eventAction;
            
            public table出荷状況RowChangeEvent(table出荷状況Row row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public table出荷状況Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
